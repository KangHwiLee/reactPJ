server {
    listen 80;

    location / {

        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri  $uri/ /index.html;

    }
}

 server {
     listen 443 ssl;
     server_name 8letter.store;

     ssl_certificate /etc/letsencrypt/live/8letter.store/fullchain.pem; # chain.pem ...... ......
     ssl_certificate_key /etc/letsencrypt/live/8letter.store/privkey.pem; # privkey.pem ...... ......

     include /sslTest/options-ssl-nginx.conf; # managed by Certbot
     ssl_dhparam /sslTest/ssl-dhparams.pem;
     # SSL ...... (... ...... ......... ............... ......... ...... ......... ......)

      location /{
                  root   /usr/share/nginx/html;
                  index  index.html index.htm;
                  try_files $uri $uri/ /index.html;
          }

          location /api {

                  proxy_pass http://3.39.232.124/:8080; # ......... springboot app............... ......

                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
          }
 }


# -----------------------------------------------


# server {
#     listen 80;
#     server_name 8letter.store;

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name 8letter.store;

#     ssl_certificate /etc/letsencrypt/live/8letter.store/fullchain.pem; # chain.pem 파일 경로
#     ssl_certificate_key /etc/letsencrypt/live/8letter.store/privkey.pem; # privkey.pem 파일 경로

#     # SSL 구성 (더 많은 구성을 추가하려면 필요한 경우 여기에 추가)
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers off;
#     ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

#      location /{
#                  root   /usr/share/nginx/html;
#                  index  index.html index.htm;
#                  try_files $uri $uri/ /index.html;
#          }

#          location /api {
                
#                  proxy_pass http://3.39.232.124/:8080; # 자신의 springboot app이사용하는 포트

#                  proxy_set_header Host $host;
#                  proxy_set_header X-Real-IP $remote_addr;
#                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                  proxy_set_header X-Forwarded-Proto $scheme;
#          }
# }

# ------------------------------------------------------------------------------------------------

# server {
#         location /{
#                 root   /usr/share/nginx/html;
#                 index  index.html index.htm;
#                 try_files $uri $uri/ /index.html;
#         }

#         location /api {
                
#                 proxy_pass http://3.39.232.124/:8080; # 자신의 springboot app이사용하는 포트

#                 proxy_set_header Host $host;
#                 proxy_set_header X-Real-IP $remote_addr;
#                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                 proxy_set_header X-Forwarded-Proto $scheme;
#         }


#     listen 443 ssl; # managed by Certbot
#     ssl_certificate /etc/letsencrypt/live/8letter.store/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/8letter.store/privkey.pem; # managed by Certbot
#     # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
# }

# server {
#     if ($host = 8letter.store) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot

#         listen 80;
#         server_name 8letter.store;
#     return 404; # managed by Certbot
# }
