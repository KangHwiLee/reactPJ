# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름 
name: Spring Boot & Gradle CI/CD

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음
on:
  push:
    branches: [ master ]
    paths:
        - "back-end/**"

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-22.04
    # Task의 sequence를 명시한다.
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
        ## create application.yaml
      - name: make application.yml
        working-directory: ./back-end
        run: |
          ## create application.yml
          cd ./src/main/resources
          # application.yml 파일 생성
          touch ./application.yml
          # GitHub-Actions 에서 설정한 값을 application.yaml 파일에 쓰기
          echo "${{ secrets.DATABASE }}" >> ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        working-directory: ./back-end
        run: chmod +x gradlew
      
      # Build
      - name: Build with Gradle
        working-directory: ./back-end
        run: ./gradlew clean build

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        working-directory: ./back-end
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/back-end .
          docker push ${{ secrets.DOCKER_REPO }}/back-end
      ## docker compose up
      ## ${{ secrets.PRIVATE_KEY }}, ${{ secrets.HOST_ID }}
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ec2-3-39-232-124.ap-northeast-2.compute.amazonaws.com
          username: ubuntu
          
          key: |
            -----BEGIN OPENSSH PRIVATE KEY-----
            b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABDnWEB9ir
            3PlCH5X+T9uVCCAAAAEAAAAAEAAAIXAAAAB3NzaC1yc2EAAAADAQABAAACAQC/n8qAdDw6
            RUUzSqGhJqMaPV0zNql08frySjS4Ry5hIBj3obORYJr3PLnfnWf1m3VJ3Q79wBAwl/l7eg
            bDvaP5bdquactcV3bYXd0HnZg/teWpZQRG/ZOqlI2v/jKw6WaFS+67M6YW1w/FWtTXAIjq
            jY4bhOiA47u8O41kpySbOGAsW7E1Wcob7s1K7GrlLrEt7SOArwkUzc0hJVHCZDhRP50JGj
            N7gV9tNCAg1wx7Gvep9aoogQTrcADHIut3V+77dY7Sy1SLoGFvHk/o57dH781XkU7cs6nO
            ojkWCWseyePbV6zEhCOTQ+AL7e8JaIVSASDWhBnJ5Y7IFFYAJdVMtiQBUVtWq1/aGqrM86
            GX8lKAEE2lxxXJllsDuGWogp61z3LqmRCOqEn56VGhyIXtdaH0rPrEhuU2HrS9UKr30EL7
            JV76I/PUTBk+olOKrMvuu0K0RTFQD+478lkxltvsNBfDOMwD/AKNMTYxjyePADXx0uv1Il
            H2nBTTX4XAFWbcrTq7O3hwJSDWg7+otSTMGr6J/O41G2x5V3Vts4DSJPLYUioFCNE+rxVb
            xq4AZjJ7w2GwsZGH6Ea6iw0CHnF0byM5fMOUoWcWQmKm8Hn9rL+U8qJUM1WTw1exVnxMFL
            pzqmMUOB9X2Vx7w4anObp7iyCCdQXm/qXsiezJ7BDqBwAAB1Dnby6kIV7xDo8GiUcGAcSZ
            ApHlRBzQ9YDJYc9sShHSG1pau4YV61O4Y/lytHPgDJFRwGv5JWI++IwfxPJAifMvC+JlLb
            2UhvZBL/yg9EssunCj+KlPRZ8fUyDcdHcA2uEDBeCRee2Wc9PQZas/6h8RE9YqEQPzMTBs
            C5qdVzsHO2Wl1nHWeQqab93E9jN5NN8yhC2rN2fhDMohfRtHY2UhAj65naCAZS2fqW0F1L
            bBTce2F92tOK8rpGLkiMo0lbup2hxU0cPonBMcnpm1lkmAEkyfGUsmxHZlCW6IffyS3wLs
            mTQY01UrTB9XZZJjXNKdDau+lodOAxDVVIGnuRMPIY9C5XjBTgTBiH8q9Hny3g0o+xo/yM
            sntwQVDE56s0k265CS27HPf5fLALYM/MPjne2ynR/EsUB505I/4jdghBfSn8bC5qqAnVCJ
            Wq15xZhIybayu7A9a86v09h/4t6C//vGPnQ9kwra75+pKNwxa+KKECsmhcb3Wyb7QqDeSj
            zTk/BS6rprpDIJzezdTb+U2yC9JnYsHcrLiAyZ5tdrpET7zqJRILoIrFOuh7k7ldDk//Da
            mf3oUOrjzHUDBUfoIbXggDmFphm396mFbuD5Xrwu/Otse4fL5M8rqJWDqh2W1MO7mtw0Zt
            wpSwJg59zr+LqF6S+aFSJLEv7WLL9SIIuc4g+Ty+OvLfSKDvt05qQnVFlrVvaEkGSrQzk9
            It0CeU6xgRhqAbuMswxK5F2ZkrHZdKnEqysA4fC8gsz+oeYeEp5z4hlvdKVzNsm/D9rw6A
            M8dskVbZJToozU3lYo2p14dfNgR7/9EQdEXCit/dySXCf2YIISH30UrUSUD6+etgWv22YK
            aRcTBW7Z/kRmp5fr0jb38vDITVxOHMYoauJhIDiPby9efWbqgSjasA1nL9GKsBYOxZzr7Q
            GoQPXPLybFWSIrYRQXMz7wX0tGPGfTNmEWHFggPsED7TBWHGCeDTpdZhFko4OC6UznA1oR
            uotyAas2lC1ZX+wLz4ly/SkyvAK7zbb+HYjxr87skQXV7ar2V7rVH5+V2+QJa4I53IZcEA
            dgK2Hq4QiHzvi4/b12xrC1GoijbWv4gcnmVL5OqTp0r9VWOuMlfSAcDqQVUwoHto1mn2Dn
            qOBL63SBwznYo3VDj22fTVPy2EeuczWVwMl0HbTqjtGQp2imCwOcajH1LAZsotKUVaIXpN
            aPfnsJjwNgHvyeOm/WFAdPuhxag2hUPnfypQylQCVAPTBg6rIGq/jb82Fsa7ZHZw62ivxk
            RZvZVZ172I1923VG5PntiY/sa0FVIgGvx15fxqfecvOyasd2i+Ug1IdkgaPJvstahohybh
            DGkJ0BfYDaTh94wR9GP3+j6j4VpuixMeuHc/Vf8Vw0T07uA4WFT4HGjFkE7G3wmJMaI8F5
            VeILFWq5i0t/yyDBYWT0oEAqB5twiv9Fq5gKFh3RwnHyMCFCT82FWJdbzNzon5l1LMvq8A
            P/zPWsXNf7pShLcMyeFbBGdJHGrUHIkEJ8tB8oFxodDcTPqR0Twzcu46mR7cf2fU8bf09G
            d0KOgJUui3TstCUby7nea5pMTM/OVXWqZJzTcNt6kCxvm+W8KKOWvxt5pFf5S4Lor+TSia
            34CKmhJKGATJezWQnFP7nKwxA3PxXm9yJ20rBRkA27/3b2RRfCYoEhiOFG23Iqzu86QLKR
            P79urbsp48FiyClkYy4Iv8WeLYXFqSlaScGh7TJU2exWTOo/v/INtgBU93OQ8vapQF5SM2
            46NAC1vXIDVxFD9CS0pPJrzAFE+oWjdbHcyoPYt5DXNjEAOfGj+JLMq0crNl56/BiZW2WL
            xx62j7RyekBsDsBQGQ3W/y1/dbEl9I96P63aOS5g+9WudkM2yV/2Us7xG+6GrJf8Z/zY3/
            INs6wF+m6rl8i7MXdg7FqOYD2I+V077HzzCrbzNnZFxIEVYb2176S293EzNqQhzKf+aC0b
            bhD+QVbVh+2AL2QI6himHNRQqV7uWboe8rRYD5tnR/5miLwSaO3wpffYW7uypPn21ZxAZb
            Ty5/YA5SUPZ+Lcl5riSTCXFYAUplvaJviY5ZkIBCcWqkUR2Pm1gwjv9zqwOxeocUa1lR3K
            rIwKe5pZ6zt5dc/bHrkmj8RRYj0dzvySexyvSumuLpja0vOduVDF7o59q1fkayEglNEpkd
            DJ212PVxGeV+8U5hQGv8NCYD/VqAjYPOTgzZ7QhSZYGyISBJmToaF+Pj6wx3JxIOQHRu0Q
            nP7UgJ7ettJpBi/ILKVONN39S8NMQfH+jgkEabydxwAYzr6ydDUzqgUo6p2Xbf8wOjKp+3
            dp5Lg4I9JX4rypaACUL+A4HcJTDkwnlalam/Yi9X9VWOi7ObQICCszrb2F5z6WOtmEAzC0
            DomTUhKLaEpabGmtskwSPYnENYhv01hKFtK/Tyg/2JwCvBGvx6SrAbbK/XNZ0yPVQR2/zW
            Pp30f9HEUu5cnpc7jEP5ABYSI=
            -----END OPENSSH PRIVATE KEY-----


          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/bangu-web
            docker-compose up -d
            docker image prune -f
