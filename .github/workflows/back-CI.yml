# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름 
name: Spring Boot & Gradle CI/CD

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음
on:
  push:
    branches: [ master ]
    paths:
        - "back-end/**"

jobs:
  build:
    # 실행 환경 지정
    runs-on: ubuntu-22.04
    # Task의 sequence를 명시한다.
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
        ## create application.yaml
      - name: make application.yml
        working-directory: ./back-end
        run: |
          ## create application.yml
          cd ./src/main/resources
          # application.yml 파일 생성
          touch ./application.yml
          # GitHub-Actions 에서 설정한 값을 application.yaml 파일에 쓰기
          echo "${{ secrets.DATABASE }}" >> ./application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        working-directory: ./back-end
        run: chmod +x gradlew
      
      # Build
      - name: Build with Gradle
        working-directory: ./back-end
        run: ./gradlew clean build

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        working-directory: ./back-end
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/back-end .
          docker push ${{ secrets.DOCKER_REPO }}/back-end
      ## docker compose up
      ## ${{ secrets.PRIVATE_KEY }}
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_ID }}
          username: ec2-user
          
          key: |
            -----BEGIN RSA PRIVATE KEY-----
            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
            -----END RSA PRIVATE KEY-----

          script: |
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/bangu-web
            docker-compose up -d
            docker image prune -f
